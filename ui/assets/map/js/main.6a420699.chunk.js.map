{"version":3,"sources":["map/SelectableRoute.jsx","map/MapPane.jsx","table/TablePane.jsx","App.jsx","index.js"],"names":["SelectableRoute","props","GeoJSON","ref","selected","leafletElement","openPopup","data","geom_kml","Popup","id","MapPane","e","Bounds","extent","merge","routes","map","r","bounds","isNaN","Map","TileLayer","url","attribution","route","key","TablePane","Paper","elevation","Table","aria-label","TableHead","TableRow","TableCell","TableBody","hover","onClick","description","lower_date","lower_date_error","upper_date","upper_date_error","route_type","App","state","_","setState","axios","get","then","response","Grid","container","component","CssBaseline","item","xs","className","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+SAiBeA,EAdS,SAAAC,GAMtB,OACE,kBAACC,EAAA,EAAD,CAASC,IALE,SAAAA,GACPA,GAAOF,EAAMG,UAAUD,EAAIE,eAAeC,aAI1BC,KAAMN,EAAMM,KAAKC,UACnC,kBAACC,EAAA,EAAD,KAAQR,EAAMM,KAAKG,MCaVC,EAlBC,SAAAV,GACd,IAAMW,EAAIC,IAAOC,OAAOC,gBAAMd,EAAMe,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEV,cAChDW,EAASC,MAAMR,EAAE,IAAM,CAAC,EAAE,IAAK,IAAK,CAAC,GAAI,KAAO,CAAC,CAAEA,EAAE,GAAIA,EAAE,IAAM,CAAEA,EAAE,GAAIA,EAAE,KAEjF,OACE,kBAACS,EAAA,EAAD,CAAKF,OAAQA,GACX,kBAACG,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2EAEZvB,EAAMe,OAAOC,KAAI,SAAAQ,GAAK,OACtB,kBAAC,EAAD,CAAiBC,IAAKD,EAAMf,GAAIH,KAAMkB,EAAOrB,SAAUqB,EAAMf,IAAMT,EAAMG,gB,6CC0BlEuB,EAnCG,SAAA1B,GAEhB,OACE,kBAAC2B,EAAA,EAAD,CAAOC,UAAW,GAChB,kBAACC,EAAA,EAAD,CAAOC,aAAW,gBAChB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,WACA,kBAACA,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,yBACA,kBAACA,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,yBACA,kBAACA,EAAA,EAAD,qBAGJ,kBAACC,EAAA,EAAD,KACIlC,EAAMe,OAAOC,KAAI,SAAAQ,GAAK,OACtB,kBAACQ,EAAA,EAAD,CAAUP,IAAKD,EAAMf,GAAI0B,OAAK,EAACC,QAASpC,EAAMoC,QAAQZ,IACpD,kBAACS,EAAA,EAAD,KAAYT,EAAMf,IAClB,kBAACwB,EAAA,EAAD,KAAYT,EAAMa,aAClB,kBAACJ,EAAA,EAAD,KAAYT,EAAMc,YAClB,kBAACL,EAAA,EAAD,KAAYT,EAAMe,kBAClB,kBAACN,EAAA,EAAD,KAAYT,EAAMgB,YAClB,kBAACP,EAAA,EAAD,KAAYT,EAAMiB,kBAClB,kBAACR,EAAA,EAAD,KAAYT,EAAMkB,oBCtBXC,G,kNAEnBC,MAAQ,CACN7B,OAAQ,GACRZ,SAAU,M,EASZiC,QAAU,SAAAZ,GAAK,OAAI,SAAAqB,GACjB,EAAKC,SAAS,CAAE3C,SAAUqB,EAAMf,O,mFAPb,IAAD,OAClBsC,IAAMC,IAAI,eAAeC,MAAK,SAAAC,GAC5B,EAAKJ,SAAS,CAAE/B,OAAQmC,EAAS5C,Y,+BASnC,OACE,kBAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,QACxB,kBAACC,EAAA,EAAD,MACA,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,UAAU,cAC1B,kBAAC,EAAD,CAAW1C,OAAQ2C,KAAKd,MAAM7B,OAAQqB,QAASsB,KAAKtB,WAGtD,kBAACe,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGH,UAAW1B,IAAOC,UAAW,GAC7C,kBAAC,EAAD,CAASb,OAAQ2C,KAAKd,MAAM7B,OAAQZ,SAAUuD,KAAKd,MAAMzC,iB,GA1BlCwD,cCPjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6a420699.chunk.js","sourcesContent":["import React from 'react';\nimport { GeoJSON, Popup } from 'react-leaflet';\n\nconst SelectableRoute = props => {\n\n  const init = ref => {\n    if (ref && props.selected) ref.leafletElement.openPopup();\n  }\n\n  return(\n    <GeoJSON ref={init} data={props.data.geom_kml}>\n      <Popup>{props.data.id}</Popup>\n    </GeoJSON>\n  )\n\n}\n\nexport default SelectableRoute;","import React from 'react'; \nimport { Map, TileLayer } from 'react-leaflet';\nimport { merge } from '@mapbox/geojson-merge';\nimport Bounds from 'geojson-bounds';\nimport SelectableRoute from './SelectableRoute';\n\nconst MapPane = props => {\n  const e = Bounds.extent(merge(props.routes.map(r => r.geom_kml)));\n  const bounds = isNaN(e[0]) ? [[-90, -80], [90, 80]] : [[ e[1], e[0] ], [ e[3], e[2] ]];\n\n  return (\n    <Map bounds={bounds}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\" />\n\n      { props.routes.map(route => \n        <SelectableRoute key={route.id} data={route} selected={route.id == props.selected} />\n      )}        \n    </Map>\n  )\n\n}\n\nexport default MapPane;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst TablePane = props => {\n\n  return (\n    <Paper elevation={3}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell>Lower Date</TableCell>\n            <TableCell>Lower Date Error</TableCell>\n            <TableCell>Upper Date</TableCell>\n            <TableCell>Upper Date Error</TableCell>\n            <TableCell>Route Type</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          { props.routes.map(route => \n            <TableRow key={route.id} hover onClick={props.onClick(route)}>\n              <TableCell>{route.id}</TableCell>\n              <TableCell>{route.description}</TableCell>\n              <TableCell>{route.lower_date}</TableCell>\n              <TableCell>{route.lower_date_error}</TableCell>\n              <TableCell>{route.upper_date}</TableCell>\n              <TableCell>{route.upper_date_error}</TableCell>\n              <TableCell>{route.route_type}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n\n}\n\nexport default TablePane;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport MapPane from './map/MapPane';\nimport TablePane from './table/TablePane';\n\nimport './App.css';\n\nexport default class App extends Component {\n\n  state = {\n    routes: [],\n    selected: null\n  }\n\n  componentDidMount() {\n    axios.get('/api/routes').then(response => {\n      this.setState({ routes: response.data });\n    });\n  }\n\n  onClick = route => _ => {\n    this.setState({ selected: route.id });\n  }\n\n  render() {\n    return (\n      <Grid container component=\"main\">\n        <CssBaseline />\n        <Grid item xs={7} className=\"table-pane\">\n          <TablePane routes={this.state.routes} onClick={this.onClick} />\n        </Grid>\n        \n        <Grid item xs={5} component={Paper} elevation={3}>\n          <MapPane routes={this.state.routes} selected={this.state.selected} />\n        </Grid>\n      </Grid>\n    )\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}